volumes:
  db-store:

x-env: &env # required

  # optional
  WEB_CONSOLE_PORT: &WEB_CONSOLE_PORT ${WEB_CONSOLE_PORT:-3000}
  STORYBOOK_PORT: &STORYBOOK_PORT ${STORYBOOK_PORT:-6006}
  WEB_CONSOLE_URL: &WEB_CONSOLE_URL ${WEB_CONSOLE_URL:-http://localhost:3000}
  ENVIRONMENT: &ENVIRONMENT ${ENVIRONMENT:-local}
  PLATFORM: &PLATFORM ${PLATFORM:-linux/amd64}

  #internal
  DATABASE_URL: &DATABASE_URL mysql://user:password@db:3306/pmng?pool_timeout=0
  DB_HOST: &DB_HOST db
  DB_PORT: &DB_PORT 3306
  DB_DATABASE: &DB_DATABASE pmng
  DB_USERNAME: &DB_USERNAME user
  DB_PASSWORD: &DB_PASSWORD password
  DB_ROOT_PASSWORD: &DB_ROOT_PASSWORD password
  CORE_API_URL: &CORE_API_URL "http://api:80"
  LOCK_FILE_BASEPATH: &LOCK_FILE_BASEPATH /app/core-api/data
  FROM_ADDRESS: &FROM_ADDRESS "md@gmail.com"

x-app: &app
  image: pmng-core:latest
  platform: *PLATFORM
  environment:
    <<: *env
  build:
    context: .
    dockerfile: ./Dockerfile
  volumes:
    - ".:/app:delegated"

services:
  # This container is used to develop multiple packages at the same time
  app:
    <<: *app

  api:
    <<: *app
    environment:
      DATABASE_URL: *DATABASE_URL
      WEB_CONSOLE_URL: *WEB_CONSOLE_URL
      LOCK_FILE_BASEPATH: *LOCK_FILE_BASEPATH
      FROM_ADDRESS: *FROM_ADDRESS
      ENVIRONMENT: *ENVIRONMENT

    command: md api start
    depends_on:
      - db

  db:
    image: mysql:8.4.0
    volumes:
      - type: volume
        source: db-store
        target: /var/lib/mysql
        volume:
          nocopy: true
      - type: bind
        source: ./db/sql
        target: /docker-entrypoint-initdb.d
      - type: bind
        source: ./db/my.cnf
        target: /etc/mysql/conf.d/my.cnf
    environment:
      MYSQL_DATABASE: *DB_DATABASE
      MYSQL_USER: *DB_USERNAME
      MYSQL_PASSWORD: *DB_PASSWORD
      MYSQL_ROOT_PASSWORD: *DB_PASSWORD
      TZ: Asia/Tokyo

  web:
    <<: *app
    environment:
      CORE_API_URL: *CORE_API_URL

    ports:
      - target: *WEB_CONSOLE_PORT
        published: *WEB_CONSOLE_PORT
        protocol: tcp
        mode: host
    command:
      - yarn
      - workspace
      - "@md/web"
      - dev
      - -p
      - *WEB_CONSOLE_PORT
    depends_on:
      - api

  storybook:
    <<: *app
    ports:
      - target: *STORYBOOK_PORT
        published: *STORYBOOK_PORT
        protocol: tcp
        mode: host
    command:
      - yarn
      - workspace
      - "@md/web"
      - storybook
      - -p
      - *STORYBOOK_PORT
